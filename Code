import os
import time
from time import sleep

#setup for using Nokia LCD (https://learn.adafruit.com/nokia-5110-3310-lcd-python-library/usage)
import Adafruit_Nokia_LCD as LCD
import Adafruit_GPIO.SPI as SPI
 
import Image
import ImageDraw
import ImageFont

import RPi.GPIO as GPIO

GPIO.setmode(GPIO.BCM)
GPIO.setwarnings(False)
GPIO.setup(23, GPIO.IN, GPIO.PUD_UP)
GPIO.setup(17, GPIO.OUT)
GPIO.setup(18, GPIO.IN, GPIO.PUD_UP)
GPIO.setup(22, GPIO.IN, GPIO.PUD_UP)
GPIO.setup(27, GPIO.OUT)
GPIO.setup(24, GPIO.IN, GPIO.PUD_UP)
GPIO.setup(25, GPIO.OUT)

scanner = 4
scan_switch = 15

GPIO.setup(scanner, GPIO.OUT)
GPIO.setup(scan_switch, GPIO.IN, GPIO.PUD_UP)

while True:
    if GPIO.input(scan_switch) == False:
        GPIO.output(scanner, 1)
    else:
        GPIO.output(scanner, 0)

    if (GPIO.input(18) == False):
        GPIO.output(17, 1)
        os.system('mpg123 -q allgo.mp3 &')
        print("All systems go")
        sleep(1)
        GPIO.output(17, 0)

    if (GPIO.input(22) == False):
        GPIO.output(27, 1)
        os.system('mpg123 -q onway.mp3 &')
        print("I'm on my way")
        sleep(1)
        GPIO.output(27, 0)

    if (GPIO.input(24) == False):
        GPIO.output(25, 1)
        os.system('mpg123 -q amuse.mp3 &')
        print("I'm not amused")
        sleep(1)
        GPIO.output(25, 0)

    if (GPIO.input(23) == False):
        os.system('mpg123 -q donttouch.mp3 &')
        print("Something tells me you shouldn't touch turbo-boost")

    sleep(0.1);

GPIO.cleanup()

#drawing "kitt" display from Nokia LCD on Adafruit (see line 5)
# Raspberry Pi hardware SPI config:
DC = 23
RST = 24
SPI_PORT = 0
SPI_DEVICE = 0
 
# Raspberry Pi software SPI config:
# SCLK = 4
# DIN = 17
# DC = 23
# RST = 24
# CS = 8

# Hardware SPI usage:
disp = LCD.PCD8544(DC, RST, spi=SPI.SpiDev(SPI_PORT, SPI_DEVICE, max_speed_hz=4000000))
 
# Software SPI usage (defaults to bit-bang SPI interface):
#disp = LCD.PCD8544(DC, RST, SCLK, DIN, CS)
 
# Initialize library.
disp.begin(contrast=60)
 
# Clear display.
disp.clear()
disp.display()

# Create blank image for drawing.
# Make sure to create image with mode '1' for 1-bit color.
image = Image.new('1', (LCD.LCDWIDTH, LCD.LCDHEIGHT))
 
# Get drawing object to draw on image.
draw = ImageDraw.Draw(image)
 
# Draw a white filled box to clear the image.
draw.rectangle((0,0,LCD.LCDWIDTH,LCD.LCDHEIGHT), outline=255, fill=255)
 
# Draw some shapes.
draw.ellipse((2,2,22,22), outline=0, fill=255)

disp.image(image)
disp.display()
